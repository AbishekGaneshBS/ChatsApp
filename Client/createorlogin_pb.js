// source: createorlogin.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.createorlogin.v1.CreateAccountRequest', null, global);
goog.exportSymbol('proto.createorlogin.v1.CreateAccountResponse', null, global);
goog.exportSymbol('proto.createorlogin.v1.LoginAccountRequest', null, global);
goog.exportSymbol('proto.createorlogin.v1.LoginAccountResponse', null, global);
goog.exportSymbol('proto.createorlogin.v1.ResponseStatus', null, global);
goog.exportSymbol('proto.createorlogin.v1.User', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.createorlogin.v1.User = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.createorlogin.v1.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.createorlogin.v1.User.displayName = 'proto.createorlogin.v1.User';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.createorlogin.v1.CreateAccountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.createorlogin.v1.CreateAccountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.createorlogin.v1.CreateAccountRequest.displayName = 'proto.createorlogin.v1.CreateAccountRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.createorlogin.v1.LoginAccountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.createorlogin.v1.LoginAccountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.createorlogin.v1.LoginAccountRequest.displayName = 'proto.createorlogin.v1.LoginAccountRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.createorlogin.v1.CreateAccountResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.createorlogin.v1.CreateAccountResponse.repeatedFields_, null);
};
goog.inherits(proto.createorlogin.v1.CreateAccountResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.createorlogin.v1.CreateAccountResponse.displayName = 'proto.createorlogin.v1.CreateAccountResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.createorlogin.v1.LoginAccountResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.createorlogin.v1.LoginAccountResponse.repeatedFields_, null);
};
goog.inherits(proto.createorlogin.v1.LoginAccountResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.createorlogin.v1.LoginAccountResponse.displayName = 'proto.createorlogin.v1.LoginAccountResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.createorlogin.v1.User.prototype.toObject = function(opt_includeInstance) {
  return proto.createorlogin.v1.User.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.createorlogin.v1.User} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.createorlogin.v1.User.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    userName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    displayName: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.createorlogin.v1.User}
 */
proto.createorlogin.v1.User.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.createorlogin.v1.User;
  return proto.createorlogin.v1.User.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.createorlogin.v1.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.createorlogin.v1.User}
 */
proto.createorlogin.v1.User.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.createorlogin.v1.User.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.createorlogin.v1.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.createorlogin.v1.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.createorlogin.v1.User.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 user_id = 1;
 * @return {number}
 */
proto.createorlogin.v1.User.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.createorlogin.v1.User} returns this
 */
proto.createorlogin.v1.User.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string user_name = 2;
 * @return {string}
 */
proto.createorlogin.v1.User.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.createorlogin.v1.User} returns this
 */
proto.createorlogin.v1.User.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string display_name = 3;
 * @return {string}
 */
proto.createorlogin.v1.User.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.createorlogin.v1.User} returns this
 */
proto.createorlogin.v1.User.prototype.setDisplayName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.createorlogin.v1.CreateAccountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.createorlogin.v1.CreateAccountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.createorlogin.v1.CreateAccountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.createorlogin.v1.CreateAccountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    displayName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    password: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.createorlogin.v1.CreateAccountRequest}
 */
proto.createorlogin.v1.CreateAccountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.createorlogin.v1.CreateAccountRequest;
  return proto.createorlogin.v1.CreateAccountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.createorlogin.v1.CreateAccountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.createorlogin.v1.CreateAccountRequest}
 */
proto.createorlogin.v1.CreateAccountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.createorlogin.v1.CreateAccountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.createorlogin.v1.CreateAccountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.createorlogin.v1.CreateAccountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.createorlogin.v1.CreateAccountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string user_name = 1;
 * @return {string}
 */
proto.createorlogin.v1.CreateAccountRequest.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.createorlogin.v1.CreateAccountRequest} returns this
 */
proto.createorlogin.v1.CreateAccountRequest.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string display_name = 2;
 * @return {string}
 */
proto.createorlogin.v1.CreateAccountRequest.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.createorlogin.v1.CreateAccountRequest} returns this
 */
proto.createorlogin.v1.CreateAccountRequest.prototype.setDisplayName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string password = 3;
 * @return {string}
 */
proto.createorlogin.v1.CreateAccountRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.createorlogin.v1.CreateAccountRequest} returns this
 */
proto.createorlogin.v1.CreateAccountRequest.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.createorlogin.v1.LoginAccountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.createorlogin.v1.LoginAccountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.createorlogin.v1.LoginAccountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.createorlogin.v1.LoginAccountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    password: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.createorlogin.v1.LoginAccountRequest}
 */
proto.createorlogin.v1.LoginAccountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.createorlogin.v1.LoginAccountRequest;
  return proto.createorlogin.v1.LoginAccountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.createorlogin.v1.LoginAccountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.createorlogin.v1.LoginAccountRequest}
 */
proto.createorlogin.v1.LoginAccountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.createorlogin.v1.LoginAccountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.createorlogin.v1.LoginAccountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.createorlogin.v1.LoginAccountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.createorlogin.v1.LoginAccountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string user_name = 1;
 * @return {string}
 */
proto.createorlogin.v1.LoginAccountRequest.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.createorlogin.v1.LoginAccountRequest} returns this
 */
proto.createorlogin.v1.LoginAccountRequest.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.createorlogin.v1.LoginAccountRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.createorlogin.v1.LoginAccountRequest} returns this
 */
proto.createorlogin.v1.LoginAccountRequest.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.createorlogin.v1.CreateAccountResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.createorlogin.v1.CreateAccountResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.createorlogin.v1.CreateAccountResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.createorlogin.v1.CreateAccountResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.createorlogin.v1.CreateAccountResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    myself: (f = msg.getMyself()) && proto.createorlogin.v1.User.toObject(includeInstance, f),
    contactsList: jspb.Message.toObjectList(msg.getContactsList(),
    proto.createorlogin.v1.User.toObject, includeInstance),
    url: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.createorlogin.v1.CreateAccountResponse}
 */
proto.createorlogin.v1.CreateAccountResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.createorlogin.v1.CreateAccountResponse;
  return proto.createorlogin.v1.CreateAccountResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.createorlogin.v1.CreateAccountResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.createorlogin.v1.CreateAccountResponse}
 */
proto.createorlogin.v1.CreateAccountResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.createorlogin.v1.ResponseStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.createorlogin.v1.User;
      reader.readMessage(value,proto.createorlogin.v1.User.deserializeBinaryFromReader);
      msg.setMyself(value);
      break;
    case 3:
      var value = new proto.createorlogin.v1.User;
      reader.readMessage(value,proto.createorlogin.v1.User.deserializeBinaryFromReader);
      msg.addContacts(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.createorlogin.v1.CreateAccountResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.createorlogin.v1.CreateAccountResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.createorlogin.v1.CreateAccountResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.createorlogin.v1.CreateAccountResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMyself();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.createorlogin.v1.User.serializeBinaryToWriter
    );
  }
  f = message.getContactsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.createorlogin.v1.User.serializeBinaryToWriter
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional ResponseStatus status = 1;
 * @return {!proto.createorlogin.v1.ResponseStatus}
 */
proto.createorlogin.v1.CreateAccountResponse.prototype.getStatus = function() {
  return /** @type {!proto.createorlogin.v1.ResponseStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.createorlogin.v1.ResponseStatus} value
 * @return {!proto.createorlogin.v1.CreateAccountResponse} returns this
 */
proto.createorlogin.v1.CreateAccountResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional User myself = 2;
 * @return {?proto.createorlogin.v1.User}
 */
proto.createorlogin.v1.CreateAccountResponse.prototype.getMyself = function() {
  return /** @type{?proto.createorlogin.v1.User} */ (
    jspb.Message.getWrapperField(this, proto.createorlogin.v1.User, 2));
};


/**
 * @param {?proto.createorlogin.v1.User|undefined} value
 * @return {!proto.createorlogin.v1.CreateAccountResponse} returns this
*/
proto.createorlogin.v1.CreateAccountResponse.prototype.setMyself = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.createorlogin.v1.CreateAccountResponse} returns this
 */
proto.createorlogin.v1.CreateAccountResponse.prototype.clearMyself = function() {
  return this.setMyself(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.createorlogin.v1.CreateAccountResponse.prototype.hasMyself = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated User contacts = 3;
 * @return {!Array<!proto.createorlogin.v1.User>}
 */
proto.createorlogin.v1.CreateAccountResponse.prototype.getContactsList = function() {
  return /** @type{!Array<!proto.createorlogin.v1.User>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.createorlogin.v1.User, 3));
};


/**
 * @param {!Array<!proto.createorlogin.v1.User>} value
 * @return {!proto.createorlogin.v1.CreateAccountResponse} returns this
*/
proto.createorlogin.v1.CreateAccountResponse.prototype.setContactsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.createorlogin.v1.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.createorlogin.v1.User}
 */
proto.createorlogin.v1.CreateAccountResponse.prototype.addContacts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.createorlogin.v1.User, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.createorlogin.v1.CreateAccountResponse} returns this
 */
proto.createorlogin.v1.CreateAccountResponse.prototype.clearContactsList = function() {
  return this.setContactsList([]);
};


/**
 * optional string url = 4;
 * @return {string}
 */
proto.createorlogin.v1.CreateAccountResponse.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.createorlogin.v1.CreateAccountResponse} returns this
 */
proto.createorlogin.v1.CreateAccountResponse.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.createorlogin.v1.LoginAccountResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.createorlogin.v1.LoginAccountResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.createorlogin.v1.LoginAccountResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.createorlogin.v1.LoginAccountResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.createorlogin.v1.LoginAccountResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    myself: (f = msg.getMyself()) && proto.createorlogin.v1.User.toObject(includeInstance, f),
    contactsList: jspb.Message.toObjectList(msg.getContactsList(),
    proto.createorlogin.v1.User.toObject, includeInstance),
    url: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.createorlogin.v1.LoginAccountResponse}
 */
proto.createorlogin.v1.LoginAccountResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.createorlogin.v1.LoginAccountResponse;
  return proto.createorlogin.v1.LoginAccountResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.createorlogin.v1.LoginAccountResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.createorlogin.v1.LoginAccountResponse}
 */
proto.createorlogin.v1.LoginAccountResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.createorlogin.v1.ResponseStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.createorlogin.v1.User;
      reader.readMessage(value,proto.createorlogin.v1.User.deserializeBinaryFromReader);
      msg.setMyself(value);
      break;
    case 3:
      var value = new proto.createorlogin.v1.User;
      reader.readMessage(value,proto.createorlogin.v1.User.deserializeBinaryFromReader);
      msg.addContacts(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.createorlogin.v1.LoginAccountResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.createorlogin.v1.LoginAccountResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.createorlogin.v1.LoginAccountResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.createorlogin.v1.LoginAccountResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMyself();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.createorlogin.v1.User.serializeBinaryToWriter
    );
  }
  f = message.getContactsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.createorlogin.v1.User.serializeBinaryToWriter
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional ResponseStatus status = 1;
 * @return {!proto.createorlogin.v1.ResponseStatus}
 */
proto.createorlogin.v1.LoginAccountResponse.prototype.getStatus = function() {
  return /** @type {!proto.createorlogin.v1.ResponseStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.createorlogin.v1.ResponseStatus} value
 * @return {!proto.createorlogin.v1.LoginAccountResponse} returns this
 */
proto.createorlogin.v1.LoginAccountResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional User myself = 2;
 * @return {?proto.createorlogin.v1.User}
 */
proto.createorlogin.v1.LoginAccountResponse.prototype.getMyself = function() {
  return /** @type{?proto.createorlogin.v1.User} */ (
    jspb.Message.getWrapperField(this, proto.createorlogin.v1.User, 2));
};


/**
 * @param {?proto.createorlogin.v1.User|undefined} value
 * @return {!proto.createorlogin.v1.LoginAccountResponse} returns this
*/
proto.createorlogin.v1.LoginAccountResponse.prototype.setMyself = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.createorlogin.v1.LoginAccountResponse} returns this
 */
proto.createorlogin.v1.LoginAccountResponse.prototype.clearMyself = function() {
  return this.setMyself(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.createorlogin.v1.LoginAccountResponse.prototype.hasMyself = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated User contacts = 3;
 * @return {!Array<!proto.createorlogin.v1.User>}
 */
proto.createorlogin.v1.LoginAccountResponse.prototype.getContactsList = function() {
  return /** @type{!Array<!proto.createorlogin.v1.User>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.createorlogin.v1.User, 3));
};


/**
 * @param {!Array<!proto.createorlogin.v1.User>} value
 * @return {!proto.createorlogin.v1.LoginAccountResponse} returns this
*/
proto.createorlogin.v1.LoginAccountResponse.prototype.setContactsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.createorlogin.v1.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.createorlogin.v1.User}
 */
proto.createorlogin.v1.LoginAccountResponse.prototype.addContacts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.createorlogin.v1.User, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.createorlogin.v1.LoginAccountResponse} returns this
 */
proto.createorlogin.v1.LoginAccountResponse.prototype.clearContactsList = function() {
  return this.setContactsList([]);
};


/**
 * optional string url = 4;
 * @return {string}
 */
proto.createorlogin.v1.LoginAccountResponse.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.createorlogin.v1.LoginAccountResponse} returns this
 */
proto.createorlogin.v1.LoginAccountResponse.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * @enum {number}
 */
proto.createorlogin.v1.ResponseStatus = {
  SUCCESS: 0,
  FAILURE: 1,
  INVALID_INPUT: 2,
  ACCOUNT_EXISTS: 3,
  ACCOUNT_NOT_FOUND: 4,
  UNAUTHORIZED: 5
};

goog.object.extend(exports, proto.createorlogin.v1);
