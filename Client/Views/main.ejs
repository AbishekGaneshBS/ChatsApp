<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ChatsApp</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="./Styles/dashboardstyle.css">
</head>
<body>
    <div class="whatsapp-container">
        <div class="sidebar">
            <div class="sidebar-header">
                <div class="user-avatar">
                    <% if (user.displayName) { %>
                        <%= user.displayName.charAt(0).toUpperCase() %>
                    <% } else { %>
                        <i class="fas fa-user"></i>
                    <% } %>
                </div>
                <div>
                    <h3><%= user.displayName %> (<%= user.userName %>)</h3>
                </div>
                <button class="logout-button" onclick="window.location.href='/logout'">Logout</button>
            </div>
            <div class="chat-list">
                <% contacts.forEach(contact => { %>
                    <div class="chat-item" data-type="user" data-user-id="<%= contact.userId %>">
                        <div class="chat-avatar"><%= contact.displayName.charAt(0).toUpperCase() %></div>
                        <div class="chat-info">
                            <h3><%= contact.displayName %><span class="status-indicator"></span></h3>
                            <p>@<%= contact.userName %></p>
                            <p>Online</p>
                        </div>
                    </div>
                <% }); %>
            </div>
        </div>
        
        <div class="chat-area">
            <div id="noChatSelected">
                <div class="no-chat-selected">
                    <i class="fas fa-comment-dots"></i>
                    <h2>Select a chat to start messaging</h2>
                </div>
            </div>

            <div id="activeChat">
                <div class="chat-header">
                    <div class="chat-avatar" id="chatAvatar"></div>
                    <div id="chatInfo">
                        <h3 id="chatName"></h3>
                        <p id="chatStatus"></p>
                    </div>
                </div>
                <div class="messages-container" id="messagesContainer"></div>
                <div class="message-input">
                    <input type="text" id="messageInput" placeholder="Type a message...">
                    <button id="sendButton"><i class="fas fa-paper-plane"></i></button>
                </div>
            </div>
        </div>
    </div>

    <script>
        let currentChatId = null;
        let currentChatType = 'user';
        let userMessageStream = null;

        document.addEventListener('DOMContentLoaded', () => {
            document.querySelectorAll('.chat-item').forEach(item => {
                item.addEventListener('click', () => {
                    const id = item.dataset.userId;
                    loadChat('user', id, item);
                });
            });

            userMessageStream = new EventSource('/api/messages/user/stream');
            userMessageStream.onmessage = (e) => handleMessage(JSON.parse(e.data));

            document.getElementById('sendButton').addEventListener('click', sendMessage);
            document.getElementById('messageInput').addEventListener('keypress', e => {
                if (e.key === 'Enter') sendMessage();
            });
        });

        function handleMessage(message) {
            if (!message || !message.senderId) {
                console.error("Invalid message received:", message);
                return;
            }

            console.log("New message received:", message);

            if (message.message) {
                updateLastMessagePreview(message.senderId, message.message);

                if (currentChatId == message.senderId) {
                    addMessageToUI(message, false);
                } else {
                    const item = document.querySelector(`[data-user-id="${message.senderId}"]`);
                    if (item) loadChat('user', message.senderId, item);
                }
            }
        }

        async function loadChat(type, id, element) {
            currentChatId = id;
            document.getElementById('noChatSelected').style.display = 'none';
            document.getElementById('activeChat').style.display = 'block';

            const name = element.querySelector('h3').textContent.split('\n')[0].trim();

            document.getElementById('chatName').textContent = name;
            document.getElementById('chatAvatar').textContent = name.charAt(0).toUpperCase();

            try {
                const response = await fetch(`/api/messages/user/${id}`);
                const data = await response.json();
                document.getElementById('messagesContainer').innerHTML = '';
                data.messages.forEach(msg => 
                    addMessageToUI(msg, msg.sender.userId != id)
                );
                document.getElementById('messagesContainer').scrollTop = 
                    document.getElementById('messagesContainer').scrollHeight;
                document.getElementById('messageInput').focus();
            } catch(error) {
                console.error('Failed to load messages:', error);
            }
        }

        async function sendMessage() {
            const input = document.getElementById('messageInput');
            const message = input.value.trim();
            if (!message || !currentChatId) return;

            try {
                await fetch('/api/messages/user/send', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        recipientId: currentChatId,
                        message: message
                    })
                });
                input.value = '';
                const item = document.querySelector(`[data-user-id="${currentChatId}"]`);
                if (item) loadChat('user', currentChatId, item);
            } catch(error) {
                console.error('Failed to send message:', error);
            }
        }

        function addMessageToUI(msg, isMe) {
            const container = document.getElementById('messagesContainer');
            const div = document.createElement('div');
            div.className = `message ${isMe ? 'sent' : 'received'}`;
            
            div.innerHTML = `
                <div class="message-content">
                    <div>${msg.message}</div>
                    <div>${new Date(msg.timestamp).toLocaleTimeString()}</div>
                </div>
            `;
            container.appendChild(div);
            container.scrollTop = container.scrollHeight;
        }

        function updateLastMessagePreview(id, message) {
            const element = document.querySelector(`[data-user-id="${id}"] p:nth-of-type(2)`);
            if (element) element.textContent = message.substring(0, 30);
        }

        window.addEventListener('beforeunload', () => {
            if (userMessageStream) userMessageStream.close();
        });
    </script>
</body>
</html>